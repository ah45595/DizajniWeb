{"remainingRequest":"C:\\Users\\viola\\Zhvillimi dhe Dizajnimi i Webit\\DizajniWeb\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js??vue-loader-options!C:\\Users\\viola\\Zhvillimi dhe Dizajnimi i Webit\\DizajniWeb\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\viola\\Zhvillimi dhe Dizajnimi i Webit\\DizajniWeb\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\viola\\Zhvillimi dhe Dizajnimi i Webit\\DizajniWeb\\src\\components\\Home.vue?vue&type=template&id=8dc7cce2&scoped=true&","dependencies":[{"path":"C:\\Users\\viola\\Zhvillimi dhe Dizajnimi i Webit\\DizajniWeb\\src\\components\\Home.vue","mtime":1621169902739},{"path":"C:\\Users\\viola\\Zhvillimi dhe Dizajnimi i Webit\\DizajniWeb\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1619867187736},{"path":"C:\\Users\\viola\\Zhvillimi dhe Dizajnimi i Webit\\DizajniWeb\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":1619867197736},{"path":"C:\\Users\\viola\\Zhvillimi dhe Dizajnimi i Webit\\DizajniWeb\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1619867187736},{"path":"C:\\Users\\viola\\Zhvillimi dhe Dizajnimi i Webit\\DizajniWeb\\node_modules\\vue-loader\\lib\\index.js","mtime":1619867197734}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"}]}