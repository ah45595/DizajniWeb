{"remainingRequest":"C:\\Users\\viola\\LabKurs2\\DizajniWeb\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js??vue-loader-options!C:\\Users\\viola\\LabKurs2\\DizajniWeb\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\viola\\LabKurs2\\DizajniWeb\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\viola\\LabKurs2\\DizajniWeb\\src\\components\\Security.vue?vue&type=template&id=57fcf770&","dependencies":[{"path":"C:\\Users\\viola\\LabKurs2\\DizajniWeb\\src\\components\\Security.vue","mtime":1621715362678},{"path":"C:\\Users\\viola\\LabKurs2\\DizajniWeb\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1621715347263},{"path":"C:\\Users\\viola\\LabKurs2\\DizajniWeb\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":1621715360019},{"path":"C:\\Users\\viola\\LabKurs2\\DizajniWeb\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1621715347263},{"path":"C:\\Users\\viola\\LabKurs2\\DizajniWeb\\node_modules\\vue-loader\\lib\\index.js","mtime":1621715360017}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"}]}